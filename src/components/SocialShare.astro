---
export interface Props {
  title: string;
  url: string; // absolute URL
  description?: string;
  image?: string;
}
const { title, url } = Astro.props as Props;

const facebook = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`;
const email = `mailto:?subject=${encodeURIComponent(title)}&body=${encodeURIComponent(url)}`;
---
<div class="share-bar">
  <a class="share-btn facebook" href={facebook} target="_blank" rel="noopener noreferrer" aria-label="Share on Facebook">
    <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M22 12a10 10 0 1 0-11.5 9.9v-7H8v-3h2.5V9.5c0-2.4 1.4-3.7 3.6-3.7 1 0 2 .2 2 .2v2.3h-1.1c-1.1 0-1.5.7-1.5 1.4V12H16l-.5 3h-2.5v7A10 10 0 0 0 22 12"/></svg>
    <span>Facebook</span>
  </a>
  <a class="share-btn email" href={email} aria-label="Share by Email">
    <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M20 4H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 4-8 5L4 8V6l8 5 8-5v2Z"/></svg>
    <span>Email</span>
  </a>
  <button class="share-btn instagram" type="button" aria-label="Share to Instagram (copy link)" data-copy={url}>
    <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M7 2h10a5 5 0 0 1 5 5v10a5 5 0 0 1-5 5H7a5 5 0 0 1-5-5V7a5 5 0 0 1 5-5Zm10 2H7a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3Zm-5 3a5 5 0 1 1 0 10 5 5 0 0 1 0-10Zm6.5-.25a1.25 1.25 0 1 1 0 2.5 1.25 1.25 0 0 1 0-2.5Z"/></svg>
    <span>Copy for Instagram</span>
  </button>
  <button class="share-btn native" type="button" aria-label="Share">
    <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M13 3h8v8h-2V7.4l-6.3 6.3a5.5 5.5 0 1 1-1.4-1.4L17.6 6H13V3Z"/></svg>
    <span>Share</span>
  </button>
  
  <script>
    const copyBtn = document.currentScript?.parentElement?.querySelector('button.instagram');
    copyBtn?.addEventListener('click', async (e) => {
      const link = (e.currentTarget as HTMLButtonElement).dataset.copy || '';
      try { await navigator.clipboard.writeText(link); (e.currentTarget as HTMLButtonElement).innerText = 'Link copied'; } catch {}
    });
    const nativeBtn = document.currentScript?.parentElement?.querySelector('button.native');
    nativeBtn?.addEventListener('click', async () => {
      try {
        if (navigator.share) { await navigator.share({ title: `${title}`, url: `${url}` }); }
      } catch {}
    });
  </script>
</div>


